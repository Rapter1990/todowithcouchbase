version: '3.9'
services:
  couchbase:
    image: couchbase:latest
    container_name: couchbase
    ports:
      - "8091:8091"     # Couchbase Web UI and REST API for cluster management
      - "8097:8097"     # Node-to-node communication port for cluster management
      - "9123:9123"     # Analytics service port
      - "11207:11207"   # Smart client library communication port
      - "11210:11210"   # Data service port for key-value operations
      - "11280:11280"   # Internal port for Full Text Search (FTS) communication
      - "18091:18091"   # Secure Couchbase Web UI and REST API (HTTPS)
      - "18097:18097"   # Secure node-to-node communication port (TLS)
    environment:
      COUCHBASE_ADMINISTRATOR_USERNAME: ${COUCHBASE_USERNAME:-Administrator}
      COUCHBASE_ADMINISTRATOR_PASSWORD: ${COUCHBASE_PASSWORD:-123456}
      COUCHBASE_BUCKET: ${COUCHBASE_BUCKET:-todo_list}
      COUCHBASE_AUTO_INDEX: true
    volumes:
      - ~/couchbase/node1:/opt/couchbase/var # Persistent storage for Couchbase data and logs
      - ./scripts:/opt/couchbase/scripts # Directory for custom initialization scripts
    command: >
      /bin/bash -c "
      /entrypoint.sh couchbase-server &
      
      chmod +x /opt/couchbase/scripts/setup-couchbase.sh &&
      /opt/couchbase/scripts/setup-couchbase.sh &&
      
      chmod +x /opt/couchbase/scripts/configure-service.sh &&
      /opt/couchbase/scripts/configure-service.sh &&
      
      chmod +x /opt/couchbase/scripts/create-cluster.sh &&
      /opt/couchbase/scripts/create-cluster.sh &&
      
      chmod +x /opt/couchbase/scripts/create-bucket.sh &&
      /opt/couchbase/scripts/create-bucket.sh &&
      
      chmod +x /opt/couchbase/scripts/create-scopes.sh &&
      /opt/couchbase/scripts/create-scopes.sh &&
      
      chmod +x /opt/couchbase/scripts/create-collections.sh &&
      /opt/couchbase/scripts/create-collections.sh &&
      
      chmod +x /opt/couchbase/scripts/create-indexes.sh &&
      /opt/couchbase/scripts/create-indexes.sh &&
      
      echo 'Setup complete. Keeping container running...' &&
      tail -f /dev/null
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8091/ui/index.html" ]  # Uses curl to check the availability of the Couchbase Web UI
      interval: 30s    # Interval between health checks (30 seconds)
      timeout: 10s     # Maximum time allowed for the health check command to run (10 seconds)
      retries: 5       # Number of retries before marking the service as unhealthy (5 retries)
    networks:
      - todowithcouchbase_network

  todowithcouchbase:
    image: 'todowithcouchbase:latest'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: todowithcouchbase
    restart: on-failure
    ports:
      - "2323:2323"
    depends_on:
      couchbase:
        condition: service_healthy
    env_file:
      - .env  # Use the .env file for environment variables
    environment:
      COUCHBASE_BUCKET: ${COUCHBASE_BUCKET:-todo_list}
      COUCHBASE_USER: ${COUCHBASE_USERNAME:-Administrator}
      COUCHBASE_PASSWORD: ${COUCHBASE_PASSWORD:-123456}
      COUCHBASE_HOST: couchbase
    networks:
      - todowithcouchbase_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - todowithcouchbase_network

  grafana:
    image: "grafana/grafana-oss:latest"
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - todowithcouchbase_network

networks:
  todowithcouchbase_network:
    driver: bridge
